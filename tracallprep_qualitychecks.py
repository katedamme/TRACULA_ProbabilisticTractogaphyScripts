#Ajay Nadig 2017
#KD 2019 
# Warning!!! Do a double check on version, version was made by storing all the expected outputs in dead strings means that some of this may be moot with updates.  


import subprocess
import os
 
SUBJECTS_DIR = '$SUBJECTS_DIR/'
subj = '043'
configfile = subj + '/%s.dmrirc' % subj
print "configuration file to be used:" + configfile


#descriptions for these files taken from https://surfer.nmr.mgh.harvard.edu/fswiki/trac-all thank u mass gen
prepoutputfiles = {
# outputs from trac-all -corr
'/dlabel/diff/lowb_brain_mask.nii.gz' : 'Diffusion brain mask',
'/dmri/dwi_orig.nii.gz' : 'Original DWI file converted into NIfTI format',
'/dmri/dwi_orig.mghdti.bvals' : 'Original list of b-values (generated by mri_convert or specified by user',
'/dmri/dwi_orig.mghdti.bvecs' : 'Original list of gradient vectors (generated by mri_convert or specified by user',
'/dmri/dwi_orig_flip.nii.gz' : 'DWI converted to the orientation preferred by FSL',
'/dmri/bvals.norot' : 'list of b-values in FSL format',
'/dmri/bvecs.norot' : 'List of gradient vectors in FSL format',
'/dmri/dwi.nii.gz' : 'DWI after all corrections, if any are performed',
'/dmri/bvals' : 'List of b-values in FSL format',
'/dmri/bvecs' : 'List of gradient vectors in FSL format (rotated to account for eddy-current correction, if this option is specified) ',
'/scripts/trac-all.cmd' : 'Command file containing all the commands executed by trac-all. This file is constantly appended to every time that trac-all is run unless a new command file is specified using the -cmd flag.',
'/scripts/trac-all.local-copy' : 'A local copy of the actual trac-all script with which all the steps were run.',
'/scripts/trac-all.log' : 'Complete log of all the commands run and terminal output generated while running trac-all. This file is constantly appended to every time that trac-all is run unless a new log file is specified using the -log flag.',
'/scripts/trac-preproc.local-copy' : 'A local copy of the actual trac-preproc script with which all the steps were run.',
# output from trac-all -qa
'/dmri/dwi_motion.txt' : 'Four measures of head motion in the DWIs (see Yendiki et al. 2013): Average volume-to-volume translation, average volume-to-volume rotation, percentage of slices with excessive intensity drop-out, and average drop-out score for slices with excessive drop-out. ',
# outputs from trac-all -intra
'/dmri/brain_anat_orig.nii.gz' : 'Original skull-stripped anatomical from FreeSurfer recon',
'/dmri/brain_anat.nii.gz' : 'Anatomical converted to the orientation preferred by FSL',
'/dmri/xfms/anatorig2anat.mat' : 'Registration matrix from original anatomical space to converted anatomical space',
'/dmri/xfms/anat2anatorig.mat' : 'Registration matrix from converted anatomical space to original anatomical space',
'/dmri/lowb_brain_anat.bbr.nii.gz' : 'Low-b diffusion image in converted anatomical space',
'/dmri/xfms/diff2anat.bbr.mat' : 'Registration matrix from diffusion space to converted anatomical space',
'/dmri/xfms/anat2diff.bbr.mat' : 'Registration matrix from converted anatomical space to diffusion space',
'/dmri/xfms/diff2anatorig.bbr.mat' : 'Registration matrix from diffusion space to original anatomical space',
'dmri/xfms/anatorig2diff.bbr.mat' : 'Registration matrix from original anatomical space to diffusion space',
# outputs from trac-all -inter
'/dmri/brain_anat_mni.nii.gz' : 'Anatomical in MNI space',
'/dmri/xfms/anat2mni.mat' : 'Registration matrix from converted anatomical space to MNI space',
'/dmri/xfms/mni2anat.mat' : 'Registration matrix from MNI space to converted anatomical space',
'/dmri/xfms/diff2mni.bbr.mat' : 'Registration matrix from diffusion to MNI space',
'/dmri/xfms/mni2diff.bbr.mat' : 'Registration matrix from MNI to diffusion space ',
'/dmri/xfms/anatorig2mni.mat' : ' Registration matrix from original anatomical space to MNI',
'/dmri/xfms/mni2anatorig.mat' : 'Registration matrix from MNI to original anatomical space',
'/dmri/xfms/cvs' : 'Symbolic link to the subjects CVS registration output directory (if applicable)',
# outputs from trac-all -masks
#anatorig (original anatomical space) masks
'/dlabel/anatorig/White-Matter.nii.gz' : 'White matter mask extracted from FreeSurfers aparc+aseg.mgz file',
'/dlabel/anatorig/White-Matter++.nii.gz' : 'White matter mask including ventral DC and brainstem',
'/dlabel/anatorig/notventricles.nii.gz' : 'White matter mask excluding lateral ventricles',
'/dlabel/anatorig/aparc+aseg+2mm.nii.gz' : 'Cortical parcellation grown into the WM by 2mm + subcortical segmentation',
'/dlabel/anatorig/cortex.nii.gz' : 'Mask of the cortex',
'/dlabel/anatorig/cortex+2mm.nii.gz' : 'Mask of the cortex grown into the WM by 2mm',
'/dlabel/anatorig/Brain-Stem.nii.gz' : 'Brainstem from FreeSurfers aparc+aseg.mgz file',
'/dlabel/anatorig/cortex+2mm+bs.nii.gz' : 'Mask of grown cortex with brainstem',
'/dlabel/anatorig/aparc+aseg_mask.nii.gz' : 'Anatomical brain mask obtained by dilating FreeSurfers aparc+aseg.mgz',
# anat (converted anatomical space in the orientation preferred by fsl) masks
'/dlabel/anat/White-Matter.nii.gz' : 'White matter mask extracted from FreeSurfers aparc+aseg.mgz file',
'/dlabel/anat/White-Matter++.nii.gz' : 'White matter mask including ventral DC and brainstem',
'/dlabel/anat/notventricles.nii.gz' : 'White matter mask excluding lateral ventricles',
'/dlabel/anat/aparc+aseg+2mm.nii.gz' : 'Cortical parcellation grown into the WM by 2mm + subcortical segmentation ',
'/dlabel/anat/cortex.nii.gz' : 'Mask of the cortex',
'/dlabel/anat/cortex+2mm.nii.gz' : 'Mask of the cortex grown into the WM by 2mm',
'/dlabel/anat/Brain-Stem.nii.gz' : 'Brainstem from FreeSurfers aparc+aseg.mgz file',
'/dlabel/anat/cortex+2mm+bs.nii.gz' : 'Mask of grown cortex with brainstem',
'/dlabel/anat/aparc+aseg_mask.nii.gz' : 'Anatomical brain mask obtained by dilating FreeSurfers aparc+aseg.mgz',
# diff (diffusion space) masks
'/dlabel/diff/White-Matter.nii.gz' : 'White matter mask extracted from FreeSurfers aparc+aseg.mgz file',
'/dlabel/diff/White-Matter++.nii.gz' : 'White matter mask including ventral DC and brainstem',
'/dlabel/diff/notventricles.nii.gz' : 'White matter mask excluding lateral ventricles',
'/dlabel/diff/aparc+aseg+2mm.nii.gz' : 'Cortical parcellation grown into the WM by 2mm + subcortical segmentation ',
'/dlabel/diff/cortex.nii.gz' : 'Mask of the cortex',
'/dlabel/diff/cortex+2mm.nii.gz' : 'Mask of the cortex grown into the WM by 2mm',
'/dlabel/diff/Brain-Stem.nii.gz' : 'Brainstem from FreeSurfers aparc+aseg.mgz file',
'/dlabel/diff/cortex+2mm+bs.nii.gz' : 'Mask of grown cortex with brainstem',
'/dlabel/diff/aparc+aseg_mask.nii.gz' : 'Anatomical brain mask obtained by dilating FreeSurfers aparc+aseg.mgz',
# mni (MNI template space) masks
'/dlabel/mni/White-Matter.nii.gz' : 'White matter mask extracted from FreeSurfers aparc+aseg.mgz file',
'/dlabel/mni/White-Matter++.nii.gz' : 'White matter mask including ventral DC and brainstem',
'/dlabel/mni/notventricles.nii.gz' : 'White matter mask excluding lateral ventricles',
'/dlabel/mni/aparc+aseg+2mm.nii.gz' : 'Cortical parcellation grown into the WM by 2mm + subcortical segmentation ',
'/dlabel/mni/cortex.nii.gz' : 'Mask of the cortex',
'/dlabel/mni/cortex+2mm.nii.gz' : 'Mask of the cortex grown into the WM by 2mm',
'/dlabel/mni/Brain-Stem.nii.gz' : 'Brainstem from FreeSurfers aparc+aseg.mgz file',
'/dlabel/mni/cortex+2mm+bs.nii.gz' : 'Mask of grown cortex with brainstem',
'/dlabel/mni/aparc+aseg_mask.nii.gz' : 'Anatomical brain mask obtained by dilating FreeSurfers aparc+aseg.mgz',
# cvs (CVS template space) masks
#'/dlabel/cvs/White-Matter.nii.gz' : 'White matter mask extracted from FreeSurfers aparc+aseg.mgz file',
#'/dlabel/cvs/White-Matter++.nii.gz' : 'White matter mask including ventral DC and brainstem',
#'/dlabel/cvs/notventricles.nii.gz' : 'White matter mask excluding lateral ventricles',
#'/dlabel/cvs/aparc+aseg+2mm.nii.gz' : 'Cortical parcellation grown into the WM by 2mm + subcortical segmentation ',
#'/dlabel/cvs/cortex.nii.gz' : 'Mask of the cortex',
#'/dlabel/cvs/cortex+2mm.nii.gz' : 'Mask of the cortex grown into the WM by 2mm',
#'/dlabel/cvs/Brain-Stem.nii.gz' : 'Brainstem from FreeSurfers aparc+aseg.mgz file',
#'/dlabel/cvs/cortex+2mm+bs.nii.gz' : 'Mask of grown cortex with brainstem',
#'/dlabel/cvs/aparc+aseg_mask.nii.gz' : 'Anatomical brain mask obtained by dilating FreeSurfers aparc+aseg.mgz',
#'/dmri/dwi_snr.txt' : 'SNR of DWI intensities within the WM mask',
#'/dlabel/<space>/lowb_brain_mask.bbr.nii.gz' : 'Diffusion brain mask (in template space or original anatomical space) ',
#outputs from trac-all -tensor
'/dmri/dtifit_FA.nii.gz' : 'Fractional anisotropy',
'/dmri/dtifit_V1.nii.gz' : 'Primary eigenvector',
'/dmri/dtifit_V2.nii.gz' : 'Secondary eigenvector',
'/dmri/dtifit_V3.nii.gz' : 'Tertiary eigenvector',
'/dmri/dtifit_L1.nii.gz' : 'Primary eigenvalue',
'/dmri/dtifit_L2.nii.gz' : 'Secondary eigenvalue',
'/dmri/dtifit_L3.nii.gz' : 'Tertiary eigenvalue',
'/dmri/dtifit_MD.nii.gz' : 'Mean diffusivity',
'/dmri/dtifit_MO.nii.gz' : 'Mode of the anisotropy (oblate ~-1; isotropic ~ 0; prolate ~ 1',
'/dmri/dtifit_S0.nii.gz' : 'Raw T2 signal with no diffusion weighting',
# trac-all -tensor outputs mapped to MNI space
'/dmri/mni/dtifit_*.bbr.nii.gz' : 'a',
'/dmri/mni/dtifit_FA.bbr.nii.gz' : 'Fractional anisotropy in MNI space',
'/dmri/mni/dtifit_V1.bbr.nii.gz' : 'Primary eigenvector in MNI space',
'/dmri/mni/dtifit_V2.bbr.nii.gz' : 'Secondary eigenvector in MNI space',
'/dmri/mni/dtifit_V3.bbr.nii.gz' : 'Tertiary eigenvector in MNI space',
'/dmri/mni/dtifit_L1.bbr.nii.gz' : 'Primary eigenvalue in MNI space',
'/dmri/mni/dtifit_L2.bbr.nii.gz' : 'Secondary eigenvalue in MNI space',
'/dmri/mni/dtifit_L3.bbr.nii.gz' : 'Tertiary eigenvalue in MNI space',
'/dmri/mni/dtifit_MD.bbr.nii.gz' : 'Mean diffusivity in MNI space',
'/dmri/mni/dtifit_MO.bbr.nii.gz' : 'Mode of the anisotropy (oblate ~-1; isotropic ~ 0; prolate ~ 1 in MNI space',
'/dmri/mni/dtifit_S0.bbr.nii.gz' : 'Raw T2 signal with no diffusion weighting in MNI space'
# trac-all -tensor outputs mapped to cvs space
#'/dmri/cvs/dtifit_FA.bbr.nii.gz' : 'Fractional anisotropy in cvs space'
#'/dmri/cvs/dtifit_V1.bbr.nii.gz' : 'Primary eigenvector in cvs space'
#'/dmri/cvs/dtifit_V2.bbr.nii.gz' : 'Secondary eigenvector in cvs space'
#'/dmri/cvs/dtifit_V3.bbr.nii.gz' : 'Tertiary eigenvector in cvs space'
#'/dmri/cvs/dtifit_L1.bbr.nii.gz' : 'Primary eigenvalue in cvs space'
#'/dmri/cvs/dtifit_L2.bbr.nii.gz' : 'Secondary eigenvalue in cvs space'
#'/dmri/cvs/dtifit_L3.bbr.nii.gz' : 'Tertiary eigenvalue in cvs space'
#'/dmri/cvs/dtifit_MD.bbr.nii.gz' : 'Mean diffusivity in cvs space'
#'/dmri/cvs/dtifit_MO.bbr.nii.gz' : 'Mode of the anisotropy (oblate ~-1; isotropic ~ 0; prolate ~ 1 in cvs space'
#'/dmri/cvs/dtifit_S0.bbr.nii.gz' : 'Raw T2 signal with no diffusion weighting in cvs space'
}

#function to check if a file exists, ask you where it is if it does not exist, then recursively check that path
def existtest(path):
	if os.path.isfile(path):
		print path + ' successfully found'
	else:
		print outputfile + ' not found' + '\n' + 'description:' + prepoutputfiles[outputfile]
		newpath = raw_input('please specify a path for this file, or break the script')
		existtest(newpath)
	
#run trac-all -prep.  subprocess.call works in such a way that the program wont continue until the called shell command is done.
subprocess.call("trac-all -prep -c %s" % configfile, shell = True)

# make sure all the files in the dictionary above exist.
for outputfile in prepoutputfiles:
	existtest(SUBJECTS_DIR+subj+outputfile)
	

